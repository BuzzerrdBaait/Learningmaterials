import msvcrt
import ctypes
import time

def listen_for_keystrokes():
    while True:
        if msvcrt.kbhit():
            key = msvcrt.getch()
            # Do something with the pressed key
            print(f"You pressed: {key}")
            # Exit loop if 'q' key is pressed
            if key == b'`':
                break


# Constants for Windows API calls
VK_CODE = {
    'backspace': 0x08,'tab': 0x09,'enter': 0x0D,'shift': 0x10,'ctrl': 0x11,'alt': 0x12,'esc': 0x1B,'space': 0x20,'left': 0x25,'up': 0x26,'right': 0x27,
    'down': 0x28,'+': 0xBB,'-': 0xBD,'*': 0x6A,'>': 0xBF,'<': 0xBE,'?': 0xBF,'/': 0x6F,'\\': 0xDC,'|': 0xDC,'}': 0xDD,'{': 0xDB,']': 0xDD,'[': 0xDB,
    'a': 0x41,'b': 0x42,'c': 0x43,'d': 0x44,'e': 0x45,'f': 0x46,'g': 0x47,'h': 0x48,'i': 0x49,'j': 0x4A,'k': 0x4B,'l': 0x4C,'m': 0x4D,'n': 0x4E,'o': 0x4F,
    'p': 0x50,'q': 0x51,'r': 0x52,'s': 0x53,'t': 0x54,'u': 0x55,'v': 0x56,'w': 0x57,'x': 0x58,'y': 0x59,'z': 0x5A,'A': 0x41,'B': 0x42,'C': 0x43,'D': 0x44,
    'E': 0x45,'F': 0x46,'G': 0x47,'H': 0x48,'I': 0x49,'J': 0x4A,'K': 0x4B,'L': 0x4C,'M': 0x4D,'N': 0x4E,'O': 0x4F,'P': 0x50,'Q': 0x51,'R': 0x52,'S': 0x53,
    'T': 0x54,'U': 0x55,'V': 0x56,'W': 0x57,'X': 0x58,'Y': 0x59,'Z': 0x5A,'0': 0x30,'1': 0x31,'2': 0x32,'3': 0x33,'4': 0x34,'5': 0x35,'6': 0x36,'7': 0x37,
    '8': 0x38,'9': 0x39,'f1': 0x70,'f2': 0x71,'f3': 0x72,'f4': 0x73,'f5': 0x74,'f6': 0x75,'f7': 0x76,'f8': 0x77,'f9': 0x78,'f10': 0x79,'f11': 0x7A,
    'f12': 0x7B,'_': 0x5F,'"':0x22,"'":0x27
}

def press_key(key):
    key_code = VK_CODE.get(key)
    prompt="pressed{}".format(key)
    print(prompt)
    if key_code is None:
        raise ValueError(f"Invalid key: {key}")

    # Press the key
    ctypes.windll.user32.keybd_event(key_code, 0, 0, 0)
    # Wait for a moment (optional)
    time.sleep(0.1)
    # Release the key
    ctypes.windll.user32.keybd_event(key_code, 0, 2, 0)

press_key('H')
press_key('E')
press_key('L')
press_key('L')
press_key('O')
press_key('-')
press_key('W')
press_key("\\")
press_key('R')
press_key('L')
press_key('D')
